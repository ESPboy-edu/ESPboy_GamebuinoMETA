
// fond + titre

const PROGMEM uint16_t initialisation_sol[] = {
  80,     // frame width
  4,      // frame height
  1,      // number of frames
  0,      // animation speed
  0xffff, // transparent color
  0,      // RGB565 color mode

 0x8668, 0x8668, 0x8668, 0x8668, 0x8668, 0x8668, 0x8668, 0x8668, 0x8668, 0x8668, 0x8668, 0x8668, 0x8668, 0x8668, 0x8668, 0x8668, 0x8668, 0x8668, 0x8668, 0x8668, 0x8668, 0x8668, 0x8668, 0x8668, 0x8668, 0x8668, 0x8668, 0x8668, 0x8668, 0x8668, 0x8668, 0x8668, 0x8668, 0x8668, 0x8668, 0x8668, 0x8668, 0x8668, 0x8668, 0x8668, 0x8668, 0x8668, 0x8668, 0x8668, 0x8668, 0x8668, 0x8668, 0x8668, 0x8668, 0x8668, 0x8668, 0x8668, 0x8668, 0x8668, 0x8668, 0x8668, 0x8668, 0x8668, 0x8668, 0x8668, 0x8668, 0x8668, 0x8668, 0x8668, 0x8668, 0x8668, 0x8668, 0x8668, 0x8668, 0x8668, 0x8668, 0x8668, 0x8668, 0x8668, 0x8668, 0x8668, 0x8668, 0x8668, 0x8668, 0x8668, 
 0x8668, 0x8668, 0x8668, 0x044a, 0x044a, 0x044a, 0x044a, 0x8668, 0x8668, 0x8668, 0x8668, 0x8668, 0x8668, 0x044a, 0x044a, 0x044a, 0x8668, 0x8668, 0x8668, 0x8668, 0x8668, 0x044a, 0x044a, 0x044a, 0x8668, 0x8668, 0x8668, 0x8668, 0x8668, 0x044a, 0x044a, 0x044a, 0x044a, 0x044a, 0x8668, 0x8668, 0x8668, 0x8668, 0x8668, 0x044a, 0x044a, 0x044a, 0x044a, 0x8668, 0x8668, 0x8668, 0x8668, 0x8668, 0x044a, 0x044a, 0x044a, 0x044a, 0x8668, 0x8668, 0x8668, 0x8668, 0x8668, 0x8668, 0x044a, 0x044a, 0x044a, 0x044a, 0x044a, 0x044a, 0x8668, 0x8668, 0x8668, 0x8668, 0x8668, 0x8668, 0x044a, 0x044a, 0x044a, 0x044a, 0x8668, 0x8668, 0x8668, 0x8668, 0x044a, 0x044a, 
  0x044a, 0x044a, 0x044a, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0x044a, 0x044a, 0x044a, 0x044a, 0x044a, 0x044a, 0xcc68, 0xcc68, 0xcc68, 0x044a, 0x044a, 0x044a, 0x044a, 0x044a, 0xcc68, 0xcc68, 0xcc68, 0x044a, 0x044a, 0x044a, 0x044a, 0x044a, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0x044a, 0x044a, 0x044a, 0x044a, 0x044a, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0x044a, 0x044a, 0x044a, 0x044a, 0x044a, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0x044a, 0x044a, 0x044a, 0x044a, 0x044a, 0x044a, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0x044a, 0x044a, 0x044a, 0x044a, 0x044a, 0x044a, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0x044a, 0x044a, 0x044a, 0x044a, 0xcc68, 0xcc68, 
  0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68
  };

Image Sol = (initialisation_sol);

const PROGMEM uint16_t initialisation_Titre[] = {
  64,     // frame width
  14,     // frame height
  1,      // number of frames
  0,      // animation speed
  0xf800, // transparent color
  0,      // RGB565 color mode

  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xf800, 0xf800, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xf800, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xf800, 0xf800, 0x0000, 0x0000, 0x0000, 0x0000, 0xf800, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xf800, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
  0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x0000, 0xf800, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x0000, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x0000, 0x0000, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x0000, 0x0000, 0xffff, 0xffff, 0x0000, 0x0000, 0xffff, 0xffff, 0x0000, 0xf800, 0xf800, 0x0000, 0xffff, 0xffff, 0x0000, 0x0000, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0x0000, 0x0000, 0x0000, 0xffff, 0xffff, 0x0000, 0x0000, 0xffff, 0xffff, 0x0000,
  0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x0000, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x0000, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x0000, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x0000, 0x0000, 0xffff, 0xffff, 0x0000, 0x0000, 0xffff, 0xffff, 0x0000, 0x0000, 0x0000, 0x0000, 0xffff, 0xffff, 0x0000, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x0000, 0x0000, 0xffff, 0xffff, 0x0000, 0x0000, 0xffff, 0xffff, 0x0000,
  0x0000, 0xffff, 0xffff, 0x0000, 0x0000, 0xffff, 0xffff, 0x0000, 0x0000, 0xffff, 0xffff, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xffff, 0xffff, 0x0000, 0x0000, 0xffff, 0xffff, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xffff, 0xffff, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xffff, 0xffff, 0x0000, 0x0000, 0xffff, 0xffff, 0xffff, 0x0000, 0x0000, 0xffff, 0xffff, 0xffff, 0x0000, 0x0000, 0xffff, 0xffff, 0x0000, 0x0000, 0xffff, 0xffff, 0x0000, 0x0000, 0xffff, 0xffff, 0x0000, 0x0000, 0xffff, 0xffff, 0x0000,
  0x0000, 0xffff, 0xffff, 0x0000, 0x0000, 0xffff, 0xffff, 0x0000, 0x0000, 0xffff, 0xffff, 0x0000, 0xf800, 0xf800, 0xf800, 0xf800, 0x0000, 0xffff, 0xffff, 0x0000, 0x0000, 0xffff, 0xffff, 0x0000, 0xf800, 0xf800, 0xf800, 0x0000, 0xffff, 0xffff, 0x0000, 0xf800, 0xf800, 0xf800, 0x0000, 0xffff, 0xffff, 0x0000, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x0000, 0x0000, 0xffff, 0xffff, 0x0000, 0x0000, 0xffff, 0xffff, 0x0000, 0x0000, 0xffff, 0xffff, 0xffff, 0x0000, 0xffff, 0xffff, 0x0000,
  0x0000, 0xffff, 0xffff, 0x0000, 0x0000, 0xffff, 0xffff, 0x0000, 0x0000, 0xffff, 0xffff, 0x0000, 0x0000, 0x0000, 0x0000, 0xf800, 0x0000, 0xffff, 0xffff, 0x0000, 0x0000, 0xffff, 0xffff, 0x0000, 0xf800, 0xf800, 0xf800, 0x0000, 0xffff, 0xffff, 0x0000, 0xf800, 0xf800, 0xf800, 0x0000, 0xffff, 0xffff, 0x0000, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x0000, 0x0000, 0xffff, 0xffff, 0x0000, 0x0000, 0xffff, 0xffff, 0x0000, 0x0000, 0xffff, 0xffff, 0xffff, 0x0000, 0xffff, 0xffff, 0x0000,
  0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x0000, 0x0000, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x0000, 0xf800, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x0000, 0xf800, 0xf800, 0xf800, 0x0000, 0xffff, 0xffff, 0x0000, 0xf800, 0xf800, 0xf800, 0x0000, 0xffff, 0xffff, 0x0000, 0x0000, 0xffff, 0xffff, 0x0000, 0xffff, 0xffff, 0x0000, 0xffff, 0xffff, 0x0000, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x0000, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x0000,
  0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x0000, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x0000, 0xf800, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x0000, 0x0000, 0xf800, 0xf800, 0xf800, 0x0000, 0xffff, 0xffff, 0x0000, 0xf800, 0xf800, 0xf800, 0x0000, 0xffff, 0xffff, 0x0000, 0x0000, 0xffff, 0xffff, 0x0000, 0x0000, 0x0000, 0x0000, 0xffff, 0xffff, 0x0000, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x0000, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x0000,
  0x0000, 0xffff, 0xffff, 0x0000, 0x0000, 0xffff, 0xffff, 0x0000, 0x0000, 0xffff, 0xffff, 0x0000, 0x0000, 0x0000, 0x0000, 0xf800, 0x0000, 0xffff, 0xffff, 0x0000, 0x0000, 0xffff, 0xffff, 0x0000, 0xf800, 0xf800, 0xf800, 0x0000, 0xffff, 0xffff, 0x0000, 0xf800, 0xf800, 0xf800, 0x0000, 0xffff, 0xffff, 0x0000, 0x0000, 0xffff, 0xffff, 0x0000, 0xf800, 0xf800, 0x0000, 0xffff, 0xffff, 0x0000, 0x0000, 0xffff, 0xffff, 0x0000, 0x0000, 0xffff, 0xffff, 0x0000, 0x0000, 0xffff, 0xffff, 0x0000, 0xffff, 0xffff, 0xffff, 0x0000,
  0x0000, 0xffff, 0xffff, 0x0000, 0x0000, 0xffff, 0xffff, 0x0000, 0x0000, 0xffff, 0xffff, 0x0000, 0xf800, 0xf800, 0xf800, 0xf800, 0x0000, 0xffff, 0xffff, 0x0000, 0x0000, 0xffff, 0xffff, 0x0000, 0xf800, 0xf800, 0xf800, 0x0000, 0xffff, 0xffff, 0x0000, 0xf800, 0xf800, 0xf800, 0x0000, 0xffff, 0xffff, 0x0000, 0x0000, 0xffff, 0xffff, 0x0000, 0xf800, 0xf800, 0x0000, 0xffff, 0xffff, 0x0000, 0x0000, 0xffff, 0xffff, 0x0000, 0x0000, 0xffff, 0xffff, 0x0000, 0x0000, 0xffff, 0xffff, 0x0000, 0xffff, 0xffff, 0xffff, 0x0000,
  0x0000, 0xffff, 0xffff, 0x0000, 0x0000, 0xffff, 0xffff, 0x0000, 0x0000, 0xffff, 0xffff, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xffff, 0xffff, 0x0000, 0x0000, 0xffff, 0xffff, 0x0000, 0xf800, 0xf800, 0xf800, 0x0000, 0xffff, 0xffff, 0x0000, 0xf800, 0xf800, 0xf800, 0x0000, 0xffff, 0xffff, 0x0000, 0x0000, 0xffff, 0xffff, 0x0000, 0xf800, 0xf800, 0x0000, 0xffff, 0xffff, 0x0000, 0x0000, 0xffff, 0xffff, 0x0000, 0x0000, 0xffff, 0xffff, 0x0000, 0x0000, 0xffff, 0xffff, 0x0000, 0x0000, 0xffff, 0xffff, 0x0000,
  0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x0000, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x0000, 0x0000, 0xffff, 0xffff, 0x0000, 0x0000, 0xffff, 0xffff, 0x0000, 0xf800, 0xf800, 0xf800, 0x0000, 0xffff, 0xffff, 0x0000, 0xf800, 0xf800, 0xf800, 0x0000, 0xffff, 0xffff, 0x0000, 0x0000, 0xffff, 0xffff, 0x0000, 0xf800, 0xf800, 0x0000, 0xffff, 0xffff, 0x0000, 0x0000, 0xffff, 0xffff, 0x0000, 0x0000, 0xffff, 0xffff, 0x0000, 0x0000, 0xffff, 0xffff, 0x0000, 0x0000, 0xffff, 0xffff, 0x0000,
  0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x0000, 0xf800, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x0000, 0x0000, 0xffff, 0xffff, 0x0000, 0x0000, 0xffff, 0xffff, 0x0000, 0xf800, 0xf800, 0xf800, 0x0000, 0xffff, 0xffff, 0x0000, 0xf800, 0xf800, 0xf800, 0x0000, 0xffff, 0xffff, 0x0000, 0x0000, 0xffff, 0xffff, 0x0000, 0xf800, 0xf800, 0x0000, 0xffff, 0xffff, 0x0000, 0x0000, 0xffff, 0xffff, 0x0000, 0x0000, 0xffff, 0xffff, 0x0000, 0x0000, 0xffff, 0xffff, 0x0000, 0x0000, 0xffff, 0xffff, 0x0000,
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xf800, 0xf800, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xf800, 0xf800, 0xf800, 0x0000, 0x0000, 0x0000, 0x0000, 0xf800, 0xf800, 0xf800, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xf800, 0xf800, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
};

Image Titre = (initialisation_Titre);



// arbre

const PROGMEM uint16_t initialisation_arbre_tronc[] = {
  20,     // frame width
  12,     // frame height
  3,      // number of frames
  0,      // animation speed
  0xffff, // transparent color
  0,      // RGB565 color mode


  // tronc sans branche

  0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68,
  0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68,
  0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0x5268, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68,
  0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0x5268, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68,
  0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0x5268, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68,
  0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0x5268, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68,
  0xcc68, 0xcc68, 0xcc68, 0xcc68, 0x5268, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68,
  0xcc68, 0xcc68, 0xcc68, 0xcc68, 0x5268, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68,
  0xcc68, 0xcc68, 0xcc68, 0xcc68, 0x5268, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68,
  0xcc68, 0xcc68, 0xcc68, 0xcc68, 0x5268, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68,
  0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68,
  0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68,

  // tronc left
  0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0x5268, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68,
  0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0x5268, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68,
  0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0x5268, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68,
  0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68,
  0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68,
  0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68,
  0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68,
  0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0x5268, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68,
  0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0x5268, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0x5268, 0xcc68, 0xcc68, 0xcc68,
  0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0x5268, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0x5268, 0xcc68, 0xcc68, 0xcc68,
  0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0x5268, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0x5268, 0xcc68, 0xcc68, 0xcc68,
  0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0x5268, 0xcc68, 0xcc68, 0xcc68,

  //tronc right

  0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68,
  0xcc68, 0xcc68, 0xcc68, 0x5268, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68,
  0xcc68, 0xcc68, 0xcc68, 0x5268, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68,
  0xcc68, 0xcc68, 0xcc68, 0x5268, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0x5268, 0xcc68, 0xcc68, 0xcc68, 0xcc68,
  0xcc68, 0xcc68, 0xcc68, 0x5268, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0x5268, 0xcc68, 0xcc68, 0xcc68, 0xcc68,
  0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0x5268, 0xcc68, 0xcc68, 0xcc68, 0xcc68,
  0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0x5268, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0x5268, 0xcc68, 0xcc68, 0xcc68, 0xcc68,
  0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0x5268, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68,
  0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0x5268, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68,
  0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0x5268, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68,
  0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68,
  0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68, 0xcc68

};

Image Arbre_tronc = (initialisation_arbre_tronc);

const PROGMEM uint16_t initialisation_branches[] = {
  19,     // frame width
  4,      // frame height
  2,      // number of frames
  0,      // animation speed
  0xffff, // transparent color
  0,      // RGB565 color mode

  // branche droite
  0xcc68, 0xcc68, 0xffff, 0xffff, 0x8668, 0x044a, 0x8668, 0x8668, 0x044a, 0x8668, 0x8668, 0x044a, 0x8668, 0x8668, 0x044a, 0x8668, 0x8668, 0x8668, 0xffff,
  0xcc68, 0xcc68, 0xcc68, 0xcc68, 0x044a, 0x044a, 0x044a, 0x044a, 0x044a, 0x044a, 0x044a, 0x044a, 0x044a, 0x044a, 0x044a, 0x044a, 0x044a, 0x044a, 0x8668,
  0xcc68, 0xcc68, 0x5268, 0x5268, 0x8668, 0x8668, 0x8668, 0x044a, 0x8668, 0x8668, 0x044a, 0x8668, 0x8668, 0x044a, 0x8668, 0x8668, 0x044a, 0x8668, 0xffff,
  0x5268, 0x5268, 0xffff, 0xffff, 0xffff, 0xffff, 0x8668, 0x8668, 0x8668, 0x8668, 0x8668, 0x8668, 0x8668, 0x8668, 0x8668, 0x8668, 0x8668, 0xffff, 0xffff,

  // branche gauche
  0xffff, 0x8668, 0x8668, 0x8668, 0x044a, 0x8668, 0x8668, 0x044a, 0x8668, 0x8668, 0x044a, 0x8668, 0x8668, 0x044a, 0x8668, 0xffff, 0xffff, 0xcc68, 0xcc68,
  0x8668, 0x044a, 0x044a, 0x044a, 0x044a, 0x044a, 0x044a, 0x044a, 0x044a, 0x044a, 0x044a, 0x044a, 0x044a, 0x044a, 0x044a, 0xcc68, 0xcc68, 0xcc68, 0xcc68,
  0xffff, 0x8668, 0x044a, 0x8668, 0x8668, 0x044a, 0x8668, 0x8668, 0x044a, 0x8668, 0x8668, 0x044a, 0x8668, 0x8668, 0x8668, 0x5268, 0x5268, 0xcc68, 0xcc68,
  0xffff, 0xffff, 0x8668, 0x8668, 0x8668, 0x8668, 0x8668, 0x8668, 0x8668, 0x8668, 0x8668, 0x8668, 0x8668, 0xffff, 0xffff, 0xffff, 0xffff, 0x5268, 0x5268
};

Image Branches = (initialisation_branches);



// Bertiman

const PROGMEM uint16_t initialisation_Bertiman_static[] = {
  17,     // frame width
  11,     // frame height
  2,      // number of frames
  0,      // animation speed
  0xffff, // transparent color
  0,      // RGB565 color mode

  // static left
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x5268, 0x5268, 0x5268, 0x5268, 0x5268, 0x5268, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xacd0, 0xd8e4, 0xd8e4, 0xffff, 0xffff, 0x5268, 0xfeb2, 0xfeb2, 0xfeb2, 0xfeb2, 0x5268, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xacd0, 0xd8e4, 0xd8e4, 0xffff, 0xffff, 0xfeb2, 0x0000, 0xfeb2, 0xfeb2, 0x0000, 0xfeb2, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xcc68, 0xffff, 0xffff, 0xfeb2, 0x5268, 0x5268, 0x5268, 0x5268, 0xfeb2, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xcc68, 0xffff, 0xd8e4, 0x5268, 0x5268, 0xcc68, 0xcc68, 0x5268, 0x5268, 0xd8e4, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xfeb2, 0xfeb2, 0xd8e4, 0xd8e4, 0x5268, 0x5268, 0x5268, 0x5268, 0xd8e4, 0xd8e4, 0xfeb2, 0xfeb2, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xfeb2, 0xfeb2, 0xd8e4, 0xd8e4, 0xd8e4, 0x5268, 0x5268, 0xd8e4, 0xd8e4, 0xd8e4, 0xfeb2, 0xfeb2, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xcc68, 0xffff, 0x0000, 0x0000, 0x0000, 0xf720, 0xf720, 0x0000, 0x0000, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0x0210, 0x0210, 0x0210, 0x0210, 0x0210, 0x0210, 0x0210, 0x0210, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0x0210, 0x0210, 0xffff, 0xffff, 0xffff, 0xffff, 0x0210, 0x0210, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0x0000, 0x0000, 0x0000, 0xffff, 0xffff, 0xffff, 0x0000, 0x0000, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff,

  // static right
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x5268, 0x5268, 0x5268, 0x5268, 0x5268, 0x5268, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x5268, 0xfeb2, 0xfeb2, 0xfeb2, 0xfeb2, 0x5268, 0xffff, 0xffff, 0xd8e4, 0xd8e4, 0xacd0,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xfeb2, 0x0000, 0xfeb2, 0xfeb2, 0x0000, 0xfeb2, 0xffff, 0xffff, 0xd8e4, 0xd8e4, 0xacd0,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xfeb2, 0x5268, 0x5268, 0x5268, 0x5268, 0xfeb2, 0xffff, 0xffff, 0xcc68, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xd8e4, 0x5268, 0x5268, 0xcc68, 0xcc68, 0x5268, 0x5268, 0xd8e4, 0xffff, 0xcc68, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xfeb2, 0xfeb2, 0xd8e4, 0xd8e4, 0x5268, 0x5268, 0x5268, 0x5268, 0xd8e4, 0xd8e4, 0xfeb2, 0xfeb2, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xfeb2, 0xfeb2, 0xd8e4, 0xd8e4, 0xd8e4, 0x5268, 0x5268, 0xd8e4, 0xd8e4, 0xd8e4, 0xfeb2, 0xfeb2, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x0000, 0x0000, 0x0000, 0xf720, 0xf720, 0x0000, 0x0000, 0x0000, 0xffff, 0xcc68, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x0210, 0x0210, 0x0210, 0x0210, 0x0210, 0x0210, 0x0210, 0x0210, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x0210, 0x0210, 0xffff, 0xffff, 0xffff, 0xffff, 0x0210, 0x0210, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0x0000, 0x0000, 0x0000, 0xffff, 0xffff, 0xffff, 0x0000, 0x0000, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff
};

const PROGMEM uint16_t initialisation_Bertiman_hit[] = {
  17,     // frame width
  11,     // frame height
  2,      // number of frames
  0,      // animation speed
  0xffff, // transparent color
  0,      // RGB565 color mode

  // hit left
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x5268, 0x5268, 0x5268, 0x5268, 0x5268, 0x5268, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x5268, 0xfeb2, 0xfeb2, 0xfeb2, 0xfeb2, 0x5268, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xfeb2, 0x0000, 0xfeb2, 0xfeb2, 0x0000, 0xfeb2, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xfeb2, 0x5268, 0x5268, 0x5268, 0x5268, 0xfeb2, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xd8e4, 0x5268, 0x5268, 0xcc68, 0xcc68, 0x5268, 0x5268, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xd8e4, 0xd8e4, 0xd8e4, 0x5268, 0x5268, 0x5268, 0x5268, 0xd8e4, 0xfeb2, 0xfeb2, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xd8e4, 0xd8e4, 0xd8e4, 0xd8e4, 0x5268, 0x5268, 0xfeb2, 0xfeb2, 0xcc68, 0xcc68, 0xd8e4, 0xd8e4, 0xd8e4,
  0xffff, 0xffff, 0xffff, 0xffff, 0x0000, 0x0000, 0x0000, 0xf720, 0xf720, 0x0000, 0xfeb2, 0xfeb2, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0x0210, 0x0210, 0x0210, 0x0210, 0x0210, 0x0210, 0x0210, 0x0210, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0x0210, 0x0210, 0xffff, 0xffff, 0xffff, 0xffff, 0x0210, 0x0210, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0x0000, 0x0000, 0x0000, 0xffff, 0xffff, 0xffff, 0x0000, 0x0000, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff,

  // hit right
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x5268, 0x5268, 0x5268, 0x5268, 0x5268, 0x5268, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x5268, 0xfeb2, 0xfeb2, 0xfeb2, 0xfeb2, 0x5268, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xfeb2, 0x0000, 0xfeb2, 0xfeb2, 0x0000, 0xfeb2, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xfeb2, 0x5268, 0x5268, 0x5268, 0x5268, 0xfeb2, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x5268, 0x5268, 0xcc68, 0xcc68, 0x5268, 0x5268, 0xd8e4, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xfeb2, 0xfeb2, 0xd8e4, 0x5268, 0x5268, 0x5268, 0x5268, 0xd8e4, 0xd8e4, 0xd8e4, 0xffff, 0xffff, 0xffff, 0xffff,
  0xd8e4, 0xd8e4, 0xd8e4, 0xcc68, 0xcc68, 0xfeb2, 0xfeb2, 0x5268, 0x5268, 0xd8e4, 0xd8e4, 0xd8e4, 0xd8e4, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xfeb2, 0xfeb2, 0x0000, 0xf720, 0xf720, 0x0000, 0x0000, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x0210, 0x0210, 0x0210, 0x0210, 0x0210, 0x0210, 0x0210, 0x0210, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x0210, 0x0210, 0xffff, 0xffff, 0xffff, 0xffff, 0x0210, 0x0210, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0x0000, 0x0000, 0x0000, 0xffff, 0xffff, 0xffff, 0x0000, 0x0000, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff
};

const PROGMEM uint16_t initialisation_Bertiman_dead[] = {
  17,     // frame width
  11,     // frame height
  1,      // number of frames
  0,      // animation speed
  0x07e0, // transparent color
  0,      // RGB565 color mode

  0x07e0, 0x07e0, 0x07e0, 0x07e0, 0x07e0, 0x07e0, 0x07e0, 0x07e0, 0x07e0, 0x07e0, 0x07e0, 0xffff, 0xffff, 0xacd0, 0x07e0, 0x07e0, 0x07e0, 
  0x07e0, 0x07e0, 0x07e0, 0x07e0, 0x07e0, 0x07e0, 0x07e0, 0x07e0, 0x07e0, 0x07e0, 0xffff, 0xacd0, 0xacd0, 0xacd0, 0xacd0, 0x07e0, 0x07e0, 
  0x07e0, 0x07e0, 0x07e0, 0x07e0, 0x07e0, 0x07e0, 0x07e0, 0x07e0, 0x07e0, 0xffff, 0xacd0, 0xacd0, 0xacd0, 0xacd0, 0xacd0, 0xacd0, 0x07e0, 
  0x07e0, 0x07e0, 0x07e0, 0x07e0, 0x07e0, 0x07e0, 0x07e0, 0x07e0, 0xffff, 0xacd0, 0xacd0, 0x0000, 0x0000, 0x0000, 0xacd0, 0xacd0, 0x5268, 
  0x07e0, 0x07e0, 0x07e0, 0x07e0, 0x07e0, 0x07e0, 0x07e0, 0x07e0, 0xffff, 0xacd0, 0xacd0, 0x0000, 0xacd0, 0x0000, 0xacd0, 0xacd0, 0x5268, 
  0x07e0, 0x07e0, 0x07e0, 0x07e0, 0x07e0, 0x07e0, 0x07e0, 0x07e0, 0xffff, 0xacd0, 0xacd0, 0x0000, 0x0000, 0xacd0, 0xacd0, 0xacd0, 0x5268, 
  0x07e0, 0xacd0, 0xf041, 0xf041, 0x07e0, 0x07e0, 0x07e0, 0x07e0, 0xffff, 0xacd0, 0xacd0, 0x0000, 0xacd0, 0x0000, 0xacd0, 0xacd0, 0x5268, 
  0x07e0, 0xacd0, 0xf041, 0xf041, 0x07e0, 0x07e0, 0x07e0, 0x07e0, 0xacd0, 0xacd0, 0xacd0, 0x0000, 0x0000, 0x0000, 0xacd0, 0xacd0, 0x5268, 
  0x07e0, 0x07e0, 0x07e0, 0xcc68, 0x07e0, 0x07e0, 0x07e0, 0x07e0, 0xacd0, 0xacd0, 0xacd0, 0xacd0, 0xacd0, 0xacd0, 0xacd0, 0xacd0, 0x5268, 
  0x07e0, 0x07e0, 0x07e0, 0xcc68, 0x07e0, 0x07e0, 0xacd0, 0xacd0, 0xacd0, 0xacd0, 0xacd0, 0xacd0, 0xacd0, 0xacd0, 0xacd0, 0xacd0, 0x5268, 
  0x07e0, 0x07e0, 0x07e0, 0xcc68, 0x07e0, 0x5268, 0x5268, 0x5268, 0x5268, 0x5268, 0x5268, 0x5268, 0x5268, 0x5268, 0x5268, 0x5268, 0x5268
};

Image Bertiman_hit = (initialisation_Bertiman_hit);
Image Bertiman_static = (initialisation_Bertiman_static);
Image Bertiman_dead = (initialisation_Bertiman_dead);





void draw() {
  gb.display.clear(); // clear l'écran

  afficher_fond();

  afficher_arbre();

  afficher_Bertiman();

  switch ( statut_menu ) {
    case 0 :

      gb.display.drawImage(9 , 6, Titre);

      // meilleur score
      gb.display.setColor(WHITE);
      gb.display.setCursor(32, 26);
      gb.display.println("best");
      gb.display.setCursor(gb.display.width() / 2 - String(bestscore).length() * 2, 35);
      gb.display.print(bestscore);
      break;

    case 1: // en jeu
      afficher_ATH_Jeu();
      break;

    case 2 :  // game over
      affichage_Fin();
      break;
  }
}

void afficher_fond() {
  gb.display.setColor( LIGHTBLUE );
  gb.display.fillRect(0, 0, 30, gb.display.height() - 4); // ciel gauche
  gb.display.fillRect(50, 0, 30, gb.display.height() - 4 ); // ciel droit

  gb.display.drawImage(0, gb.display.height() - 4 , Sol);
}

void afficher_arbre() {
  for (int i = 0; i < TAILLE_ARBRE; ++i ) {
    //gb.display.fillRect(30, 50 - 12 * i , 20, 12); // arbre

    Arbre_tronc.setFrame(arbre[i]);
    gb.display.drawImage(30, 48 - 12 * i, Arbre_tronc); // joueur


    // branches
    if ( arbre[i] == BRANCHE_GAUCHE ) {
      // gb.display.fillRect(15, 50 - 12 * i + 4, 15, 4);

      Branches.setFrame(1);
      gb.display.drawImage(11, 48 - 12 * i, Branches);
    }
    if ( arbre[i] == BRANCHE_DROITE ) {
      Branches.setFrame(0);
      //   gb.display.fillRect(50, 50 - 12 * i + 4, 15, 4);
      gb.display.drawImage(50, 48 - 12 * i, Branches);
    }
  }
}

void afficher_Bertiman() {
  switch ( statut_menu ) {
    case 2 : // fin de partie
      gb.display.drawImage(10 + 45 * (position_joueur - 1), gb.display.height() - 11 - 4 , Bertiman_dead); // joueur
      break;
    default :
      if ( animation == 0 ) {
        gb.display.drawImage(10 + 45 * (position_joueur - 1), gb.display.height() - 11 - 4 , Bertiman_static); // joueur
      }
      else {

        gb.display.drawImage(10 + 45 * (position_joueur - 1), gb.display.height() - 11 - 4 , Bertiman_hit); // joueur
        animation -= 1;
        if ( animation == 1 ) {
          Coupe();
        }

        break;

      }
  }
}

void afficher_ATH_Jeu() {
  gb.display.setColor(YELLOW);
  gb.display.fillRect(20, 6, 40, 6); // fond
  gb.display.setColor(BLACK);
  gb.display.fillRect(21, 7, 38 , 4); // fond temps
  gb.display.setColor(RED);
  gb.display.fillRect(21, 7, temps / 10 , 4); // temps
  gb.display.setColor(WHITE);

  // score
  gb.display.setCursor(gb.display.width() / 2 - String(score).length() * 2, 35);
  gb.display.print(score);
}

void affichage_Fin() {

  // fond
  gb.display.setColor(BROWN); // manche marron
  gb.display.fillRect(0, 8, 10 , 13);
  gb.display.setColor(RED); // lame rouge
  gb.display.fillRect(10, 8, 60 , 25);
  gb.display.setColor(GRAY); // lame grise
  gb.display.fillRect(10, 33, 60 , 12);

  // texte
  gb.display.setColor(WHITE);
  gb.display.setCursor(gb.display.width() / 2 - 18, 13);
  gb.display.print("game over");

  String scoreText = "score : " + String(score);
  gb.display.setCursor(gb.display.width() / 2 - scoreText.length() * 2, 25);
  gb.display.print(scoreText);


  String bestText = "best : " + String(bestscore);
  gb.display.setCursor(gb.display.width() / 2 - bestText.length() * 2, 36);
  gb.display.print(bestText);

}
