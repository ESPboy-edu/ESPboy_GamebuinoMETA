/*
   Copyright (C) 2016 Ignacio Vina (@igvina)

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/

#pragma once
#define GIFT_SIZE  13


const unsigned char GIFT_MASK_BITMAP[] PROGMEM = //13,13
{
  0xfe, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xfe, 0x0f, 0x1f, 0x1f,
  0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f,
  0x1f, 0x0f,
};

#ifdef ARDUBOY_2
const unsigned char GIFT_LIFE_BITMAP[] PROGMEM = //13,13
{
  0xfe, 0x03, 0x61, 0xf1, 0xf9, 0xf1, 0xe1, 0xf1,
  0xf9, 0xf1, 0x61, 0x03, 0xfe, 0x0f, 0x18, 0x10,
  0x10, 0x11, 0x13, 0x17, 0x13, 0x11, 0x10, 0x10,
  0x18, 0x0f,
};

const unsigned char GIFT_DEATH_BITMAP[] PROGMEM = //13,13
{
  0xfe, 0x03, 0x01, 0xf1, 0x99, 0x9d, 0xfd, 0x9d,
  0x99, 0xf1, 0x01, 0x03, 0xfe, 0x0f, 0x18, 0x10,
  0x11, 0x17, 0x13, 0x16, 0x13, 0x17, 0x11, 0x10,
  0x18, 0x0f,
};

const unsigned char GIFT_DOUBLE_RAY_BITMAP[] PROGMEM = //13,13
{
  0xfe, 0x03, 0x21, 0x11, 0xf9, 0x11, 0x21, 0x11,
  0xf9, 0x11, 0x21, 0x03, 0xfe, 0x0f, 0x18, 0x10,
  0x10, 0x17, 0x10, 0x10, 0x10, 0x17, 0x10, 0x10,
  0x18, 0x0f,
};

const unsigned char GIFT_NO_GRAVITY_BITMAP[] PROGMEM = //13,13
{
  0xfe, 0x03, 0x41, 0xc1, 0xc1, 0xe1, 0xf1, 0xf9,
  0x69, 0x39, 0x01, 0x03, 0xfe, 0x0f, 0x18, 0x12,
  0x14, 0x11, 0x13, 0x17, 0x10, 0x10, 0x10, 0x10,
  0x18, 0x0f,
};

const unsigned char GIFT_NEGATIVE_BITMAP[] PROGMEM = //13,13
{
  0xfe, 0x03, 0x01, 0xf9, 0xf9, 0xf9, 0x79, 0x39,
  0x19, 0xf9, 0x01, 0x03, 0xfe, 0x0f, 0x18, 0x10,
  0x13, 0x13, 0x12, 0x12, 0x12, 0x12, 0x13, 0x10,
  0x18, 0x0f,
};

const unsigned char GIFT_SLOW_BITMAP[] PROGMEM = //13,13
{
  0xfe, 0x03, 0x41, 0xe1, 0xb1, 0x19, 0x49, 0xe1,
  0xb1, 0x19, 0x09, 0x03, 0xfe, 0x0f, 0x18, 0x10,
  0x10, 0x11, 0x13, 0x12, 0x10, 0x11, 0x13, 0x12,
  0x18, 0x0f,
};

const unsigned char GIFT_MIRROR_BITMAP[] PROGMEM = //13,13
{
  0xfe, 0x03, 0x11, 0x39, 0x55, 0x11, 0x11, 0x11,
  0x51, 0x91, 0x01, 0x03, 0xfe, 0x0f, 0x18, 0x10,
  0x11, 0x11, 0x11, 0x11, 0x11, 0x15, 0x13, 0x11,
  0x18, 0x0f,
};

const unsigned char GIFT_SHIELD_BITMAP[] PROGMEM = //13,13
{
0xfe, 0x03, 0x01, 0x79, 0xf9, 0xf9, 0xf9, 0xf9,
0xf9, 0x79, 0x01, 0x03, 0xfe, 0x0f, 0x18, 0x10,
0x10, 0x11, 0x13, 0x17, 0x13, 0x11, 0x10, 0x10,
0x18, 0x0f,
};

#endif

#ifdef GAMEBUINO_META

const uint8_t PROGMEM GB_GIFT_LIFE_BITMAP[] = {
13, 13, // width, height
1, // frames
0, 
0, // frame loop
0xf, // transparent color
1, // color mode
0xf7, 0x77, 0x77, 0x77, 0x77, 0x77, 0xf0, 0x77, 0x00, 0x00, 0x00, 0x00, 0x07, 0x70, 0x70, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x70, 0x70, 0x00, 0x70, 0x00, 0x70, 0x00, 0x70, 0x70, 0x07, 0x77, 0x07, 
0x77, 0x00, 0x70, 0x70, 0x77, 0x77, 0x77, 0x77, 0x70, 0x70, 0x70, 0x77, 0x77, 0x77, 0x77, 0x70, 
0x70, 0x70, 0x07, 0x77, 0x77, 0x77, 0x00, 0x70, 0x70, 0x00, 0x77, 0x77, 0x70, 0x00, 0x70, 0x70, 
0x00, 0x07, 0x77, 0x00, 0x00, 0x70, 0x70, 0x00, 0x00, 0x70, 0x00, 0x00, 0x70, 0x77, 0x00, 0x00, 
0x00, 0x00, 0x07, 0x70, 0xf7, 0x77, 0x77, 0x77, 0x77, 0x77, 0xf0,};

const uint8_t PROGMEM GB_GIFT_DEATH_BITMAP[] = {
13, 13, // width, height
1, // frames
0, 
0, // frame loop
0xf, // transparent color
1, // color mode
0xf7, 0x77, 0x77, 0x77, 0x77, 0x77, 0xf0, 0x77, 0x00, 0x00, 0x00, 0x00, 0x07, 0x70, 0x70, 0x00, 
0x07, 0x77, 0x00, 0x00, 0x70, 0x70, 0x00, 0x77, 0x77, 0x70, 0x00, 0x70, 0x70, 0x07, 0x77, 0x77, 
0x77, 0x00, 0x70, 0x70, 0x07, 0x00, 0x70, 0x07, 0x00, 0x70, 0x70, 0x07, 0x00, 0x70, 0x07, 0x00, 
0x70, 0x70, 0x07, 0x77, 0x77, 0x77, 0x00, 0x70, 0x70, 0x07, 0x77, 0x07, 0x77, 0x00, 0x70, 0x70, 
0x00, 0x77, 0x77, 0x70, 0x00, 0x70, 0x70, 0x00, 0x70, 0x70, 0x70, 0x00, 0x70, 0x77, 0x00, 0x00, 
0x00, 0x00, 0x07, 0x70, 0xf7, 0x77, 0x77, 0x77, 0x77, 0x77, 0xf0,};

const uint8_t PROGMEM GB_GIFT_DOUBLE_RAY_BITMAP[] = {
13, 13, // width, height
1, // frames
0, 
0, // frame loop
0xf, // transparent color
1, // color mode
0xf7, 0x77, 0x77, 0x77, 0x77, 0x77, 0xf0, 0x77, 0x00, 0x00, 0x00, 0x00, 0x07, 0x70, 0x70, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x70, 0x70, 0x00, 0x70, 0x00, 0x70, 0x00, 0x70, 0x70, 0x07, 0x77, 0x07, 
0x77, 0x00, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x00, 0x70, 0x00, 0x70, 0x00, 
0x70, 0x70, 0x00, 0x70, 0x00, 0x70, 0x00, 0x70, 0x70, 0x00, 0x70, 0x00, 0x70, 0x00, 0x70, 0x70, 
0x00, 0x70, 0x00, 0x70, 0x00, 0x70, 0x70, 0x00, 0x70, 0x00, 0x70, 0x00, 0x70, 0x77, 0x00, 0x00, 
0x00, 0x00, 0x07, 0x70, 0xf7, 0x77, 0x77, 0x77, 0x77, 0x77, 0xf0,};

const uint8_t PROGMEM GB_GIFT_NO_GRAVITY_BITMAP[] = {
13, 13, // width, height
1, // frames
0, 
0, // frame loop
0xf, // transparent color
1, // color mode
0xf7, 0x77, 0x77, 0x77, 0x77, 0x77, 0xf0, 0x77, 0x00, 0x00, 0x00, 0x00, 0x07, 0x70, 0x70, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x70, 0x70, 0x00, 0x00, 0x07, 0x77, 0x00, 0x70, 0x70, 0x00, 0x00, 0x77, 
0x07, 0x00, 0x70, 0x70, 0x00, 0x07, 0x77, 0x77, 0x00, 0x70, 0x70, 0x77, 0x77, 0x77, 0x70, 0x00, 
0x70, 0x70, 0x07, 0x77, 0x77, 0x00, 0x00, 0x70, 0x70, 0x00, 0x77, 0x70, 0x00, 0x00, 0x70, 0x70, 
0x70, 0x07, 0x70, 0x00, 0x00, 0x70, 0x70, 0x07, 0x00, 0x70, 0x00, 0x00, 0x70, 0x77, 0x00, 0x00, 
0x00, 0x00, 0x07, 0x70, 0xf7, 0x77, 0x77, 0x77, 0x77, 0x77, 0xf0,};

const uint8_t PROGMEM GB_GIFT_NEGATIVE_BITMAP[] = {
13, 13, // width, height
1, // frames
0, 
0, // frame loop
0xf, // transparent color
1, // color mode
0xf7, 0x77, 0x77, 0x77, 0x77, 0x77, 0xf0, 0x77, 0x00, 0x00, 0x00, 0x00, 0x07, 0x70, 0x70, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x70, 0x70, 0x07, 0x77, 0x77, 0x77, 0x00, 0x70, 0x70, 0x07, 0x77, 0x77, 
0x77, 0x00, 0x70, 0x70, 0x07, 0x77, 0x77, 0x07, 0x00, 0x70, 0x70, 0x07, 0x77, 0x70, 0x07, 0x00, 
0x70, 0x70, 0x07, 0x77, 0x00, 0x07, 0x00, 0x70, 0x70, 0x07, 0x70, 0x00, 0x07, 0x00, 0x70, 0x70, 
0x07, 0x77, 0x77, 0x77, 0x00, 0x70, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x77, 0x00, 0x00, 
0x00, 0x00, 0x07, 0x70, 0xf7, 0x77, 0x77, 0x77, 0x77, 0x77, 0xf0,};

const uint8_t PROGMEM GB_GIFT_SLOW_BITMAP[] = {
13, 13, // width, height
1, // frames
0, 
0, // frame loop
0xf, // transparent color
1, // color mode
0xf7, 0x77, 0x77, 0x77, 0x77, 0x77, 0xf0, 0x77, 0x00, 0x00, 0x00, 0x00, 0x07, 0x70, 0x70, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x70, 0x70, 0x00, 0x07, 0x70, 0x07, 0x70, 0x70, 0x70, 0x00, 0x77, 0x00, 
0x77, 0x00, 0x70, 0x70, 0x07, 0x70, 0x07, 0x70, 0x00, 0x70, 0x70, 0x77, 0x00, 0x77, 0x00, 0x00, 
0x70, 0x70, 0x07, 0x70, 0x07, 0x70, 0x00, 0x70, 0x70, 0x00, 0x77, 0x00, 0x77, 0x00, 0x70, 0x70, 
0x00, 0x07, 0x70, 0x07, 0x70, 0x70, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x77, 0x00, 0x00, 
0x00, 0x00, 0x07, 0x70, 0xf7, 0x77, 0x77, 0x77, 0x77, 0x77, 0xf0,};

const uint8_t PROGMEM GB_GIFT_MIRROR_BITMAP[] = {
13, 13, // width, height
1, // frames
0, 
0, // frame loop
0xf, // transparent color
1, // color mode
0xf7, 0x77, 0x77, 0x77, 0x77, 0x77, 0xf0, 0x77, 0x00, 0x00, 0x00, 0x00, 0x07, 0x70, 0x70, 0x00, 
0x70, 0x00, 0x00, 0x00, 0x70, 0x70, 0x07, 0x00, 0x00, 0x00, 0x00, 0x70, 0x70, 0x77, 0x77, 0x77, 
0x77, 0x00, 0x70, 0x70, 0x07, 0x00, 0x00, 0x00, 0x00, 0x70, 0x70, 0x00, 0x70, 0x00, 0x70, 0x00, 
0x70, 0x70, 0x00, 0x00, 0x00, 0x07, 0x00, 0x70, 0x70, 0x07, 0x77, 0x77, 0x77, 0x70, 0x70, 0x70, 
0x00, 0x00, 0x00, 0x07, 0x00, 0x70, 0x70, 0x00, 0x00, 0x00, 0x70, 0x00, 0x70, 0x77, 0x00, 0x00, 
0x00, 0x00, 0x07, 0x70, 0xf7, 0x77, 0x77, 0x77, 0x77, 0x77, 0xf0,};

const uint8_t PROGMEM GB_GIFT_SHIELD_BITMAP[] = {
13, 13, // width, height
1, // frames
0, 
0, // frame loop
0xf, // transparent color
1, // color mode
0xf7, 0x77, 0x77, 0x77, 0x77, 0x77, 0xf0, 0x77, 0x00, 0x00, 0x00, 0x00, 0x07, 0x70, 0x70, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x70, 0x70, 0x07, 0x77, 0x77, 0x77, 0x00, 0x70, 0x70, 0x07, 0x00, 0x00, 
0x07, 0x00, 0x70, 0x70, 0x07, 0x00, 0x00, 0x07, 0x00, 0x70, 0x70, 0x07, 0x00, 0x00, 0x07, 0x00, 
0x70, 0x70, 0x00, 0x70, 0x00, 0x70, 0x00, 0x70, 0x70, 0x00, 0x70, 0x00, 0x70, 0x00, 0x70, 0x70, 
0x00, 0x07, 0x07, 0x00, 0x00, 0x70, 0x70, 0x00, 0x00, 0x70, 0x00, 0x00, 0x70, 0x77, 0x00, 0x00, 
0x00, 0x00, 0x07, 0x70, 0xf7, 0x77, 0x77, 0x77, 0x77, 0x77, 0xf0,};

Image IM_GIFT_LIFE_BITMAP(GB_GIFT_LIFE_BITMAP);
Image IM_GIFT_DEATH_BITMAP(GB_GIFT_DEATH_BITMAP);
Image IM_GIFT_DOUBLE_RAY_BITMAP(GB_GIFT_DOUBLE_RAY_BITMAP);
Image IM_GIFT_NO_GRAVITY_BITMAP(GB_GIFT_NO_GRAVITY_BITMAP);
Image IM_GIFT_NEGATIVE_BITMAP(GB_GIFT_NEGATIVE_BITMAP);
Image IM_GIFT_SLOW_BITMAP(GB_GIFT_SLOW_BITMAP);
Image IM_GIFT_MIRROR_BITMAP(GB_GIFT_MIRROR_BITMAP);
Image IM_GIFT_SHIELD_BITMAP(GB_GIFT_SHIELD_BITMAP);

Image* GIFT_LIFE_BITMAP = &IM_GIFT_LIFE_BITMAP;
Image* GIFT_DEATH_BITMAP = &IM_GIFT_DEATH_BITMAP;
Image* GIFT_DOUBLE_RAY_BITMAP = &IM_GIFT_DOUBLE_RAY_BITMAP;
Image* GIFT_NO_GRAVITY_BITMAP = &IM_GIFT_NO_GRAVITY_BITMAP;
Image* GIFT_NEGATIVE_BITMAP = &IM_GIFT_NEGATIVE_BITMAP;
Image* GIFT_SLOW_BITMAP = &IM_GIFT_SLOW_BITMAP;
Image* GIFT_MIRROR_BITMAP = &IM_GIFT_MIRROR_BITMAP;
Image* GIFT_SHIELD_BITMAP = &IM_GIFT_SHIELD_BITMAP;
#endif
